//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by cf-sdk-builder
// 

using CloudFoundry.CloudController.V2.Client.Data;
using CloudFoundry.CloudController.V2.Interfaces;
using CloudFoundry.CloudController.V2.Common;
using CloudFoundry.CloudController.V2.Common.ServiceLocation;
using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Net;
using System.Net.Http;
using System.Threading;
using System.Threading.Tasks;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Client
{
	[GeneratedCodeAttribute("cf-dotnet-sdk-builder", "1.0.0.0")]
    public class <%= endpoint.name.pretty_name %>Endpoint: BaseEndpoint
    {
        public <%= endpoint.name.pretty_name %>Endpoint(IPasswordAuthCredential credential, CancellationToken cancellationToken, IServiceLocator serviceLocator)
        {
            this.Credential = credential;
            this.CancellationToken = cancellationToken;
            this.ServiceLocator = serviceLocator;
        }

        public <%= endpoint.name.pretty_name %>Endpoint(IPasswordAuthCredential credential, CancellationToken cancellationToken)
        {
            this.Credential = credential;
            this.CancellationToken = cancellationToken;
            this.ServiceLocator = new ServiceLocator();
        }

        <% endpoint.methods.each do |method| %>
        /// <summary>
        /// <%= method.description %>
        /// </summary><%(method.explanation || '').lines.each do |line| %>
        /// <%= line.strip %><% end %><%
   next unless method.request

   route_params = SDKBuilder::Method.get_route_params method.route
   method_params = method.parameters.map {|p| "#{p.definition} #{p.name}"}.join ', '
%>
        public async Task<%= method.return ? "<#{method.return.definition}>" : "" %> <%= method.name.pretty_name %>(<%= method_params %>)
        {<% if route_params.length > 0 %>
            string route = string.Format("<%= SDKBuilder::Method.get_string_format_route method.route %>", <%= route_params.join ', ' %>);
        <%else%>
            string route = "<%= method.route %>";
        <%end%>
            string endpoint = this.Credential.ServerEndpoint.AbsoluteUri.TrimEnd('/') + route;
            var client = this.GetHttpClient();
            client.Uri = new Uri(endpoint);

            client.Method = <%= method.http_method.to_http_method %>;
            client.Headers.Add(BuildAuthenticationHeader(this.Credential.AccessToken));
        <%if method.request['request_content_type'] %>
            client.ContentType = "<%= method.request['request_content_type'] %>";
        <%end%>
        <% if method.request["request_body"] %>
            client.Content = JsonConvert.SerializeObject(value).ConvertToStream();
        <% end %>
            var response = await client.SendAsync();
        <%if method.return %>
            return JsonConvert.DeserializeObject<<%= method.return.definition %>>(await response.ReadContentAsStringAsync());
        <% end %>
        }
        <% end %>
    }
}
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by cf-sdk-builder
// 

using CloudFoundry.CloudController.V2.Client.Data;
using CloudFoundry.CloudController.V2.Interfaces;
using CloudFoundry.Common;
using CloudFoundry.Common.ServiceLocation;
using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Net;
using System.Net.Http;
using System.Threading;
using System.Threading.Tasks;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Client
{
    [GeneratedCodeAttribute("cf-dotnet-sdk-builder", "1.0.0.0")]
    public class <%= endpoint.name.pretty_name %>Endpoint: BaseEndpoint
    {
        public <%= endpoint.name.pretty_name %>Endpoint(CloudfoundryClient client)
        {
            this.CloudTarget = client.CloudTarget;
            this.CancellationToken = client.CancellationToken;
            this.ServiceLocator = client.ServiceLocator;
            this.auth = client.auth;
        }
    <% endpoint.methods.each do |method| %>
        /// <summary>
        /// <%= method.description %>
        /// </summary><%(method.explanation || '').lines.each do |line| %>
        /// <%= line.strip %><% end %><%
       next unless method.request
       route_params = SDKBuilder::Method.get_route_params method.route
       method_params = method.parameters.map {|p| "#{p.definition} #{p.name}"}.join ', ' %>
    <% if method.http_method == "GET" %>
        <% if method.return && method.return.is_array %>
        public async Task<PagedResponse<<%= method.return.definition.chomp('[]') %>>> <%= method.name.pretty_name %>(<%= method_params %>)
        {
            return await <%= method.name.pretty_name %>(<%= method.parameters.length > 0 ? (method.parameters.map {|p| p.name}.join ', ') + ", " : "" %>new RequestOptions());
        }
        <% end %>
    <% end %>
    <% if method.return && method.return.is_array %>
        public async Task<PagedResponse<<%= method.return.definition.chomp('[]') %>>> <%= method.name.pretty_name %>(<%= method_params.length > 0 ? method_params + ", " : "" %>RequestOptions options)
    <% else %>
        public async Task<%= method.return ? "<#{method.return.definition}>" : "" %> <%= method.name.pretty_name %>(<%= method_params %>)
    <% end %>
        {<% if route_params.length > 0 %>
            string route = string.Format("<%= SDKBuilder::Method.get_string_format_route method.route %>", <%= route_params.join ', ' %>);
        <%else%>
            string route = "<%= method.route %>";
        <%end%>
            <% if method.return && method.return.is_array %>
            string endpoint = this.CloudTarget.ToString().TrimEnd('/') + route + options.ToString();
            <% else %>
            string endpoint = this.CloudTarget.ToString().TrimEnd('/') + route;
            <% end %>
            var client = this.GetHttpClient();
            client.Uri = new Uri(endpoint);

            client.Method = <%= method.http_method.to_http_method %>;
            client.Headers.Add(BuildAuthenticationHeader());
        <%if method.request['request_content_type'] %>
            client.ContentType = "<%= method.request['request_content_type'] %>";
        <%end%>
        <% if method.request["request_body"] %>
            client.Content = JsonConvert.SerializeObject(value).ConvertToStream();
        <% end %>
            var response = await client.SendAsync();
        <%if method.return %>
            <% if method.return.is_array %>
            return Util.DeserializePage<<%= method.return.definition.chomp('[]') %>>(await response.ReadContentAsStringAsync());
            <% else %>
            return Util.DeserializeJson<<%= method.return.definition %>>(await response.ReadContentAsStringAsync());
            <% end %>
        <% end %>
        }
    <% end %>
    }
}